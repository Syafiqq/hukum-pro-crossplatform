import 'dart:ui' as ui show Shadow, FontFeature, TextLeadingDistribution;

import 'package:flutter/painting.dart';

enum FontTitle {
  thin,
  thinItalic,
  extraLight,
  extraLightItalic,
  light,
  lightItalic,
  regular,
  regularItalic,
  medium,
  mediumItalic,
  semiBold,
  semiBoldItalic,
  bold,
  boldItalic,
  extraBold,
  extraBoldItalic,
  black,
  blackItalic,
}

enum FontSubtitle {
  thin,
  extraLight,
  light,
  regular,
  medium,
  semiBold,
  bold,
  extraBold,
  black,
}

enum FontContent {
  thin,
  thinItalic,
  extraLight,
  extraLightItalic,
  light,
  lightItalic,
  regular,
  regularItalic,
  medium,
  mediumItalic,
  semiBold,
  semiBoldItalic,
  bold,
  boldItalic,
  extraBold,
  extraBoldItalic,
  black,
  blackItalic,
}

extension TitleFontDefinition on FontTitle {
  TextStyle font(
    double? fontSize,
    Color? color, {
    bool? inherit,
    Color? backgroundColor,
    String? fontFamily,
    List<String>? fontFamilyFallback,
    FontStyle? fontStyle,
    double? letterSpacing,
    double? wordSpacing,
    TextBaseline? textBaseline,
    double? height,
    ui.TextLeadingDistribution? leadingDistribution,
    Locale? locale,
    Paint? foreground,
    Paint? background,
    List<ui.Shadow>? shadows,
    List<ui.FontFeature>? fontFeatures,
    TextDecoration? decoration,
    Color? decorationColor,
    TextDecorationStyle? decorationStyle,
    double? decorationThickness,
    String? debugLabel,
  }) =>
      TextStyle(
        inherit: inherit ?? true,
        color: color,
        backgroundColor: backgroundColor,
        fontFamily: 'Montserrat',
        fontFamilyFallback: fontFamilyFallback,
        fontSize: fontSize,
        fontWeight: FontWeight.values[this.index ~/ 2],
        fontStyle: this.index % 2 == 1 ? FontStyle.normal : FontStyle.italic,
        letterSpacing: letterSpacing,
        wordSpacing: wordSpacing,
        textBaseline: textBaseline,
        height: height,
        leadingDistribution: leadingDistribution,
        locale: locale,
        foreground: foreground,
        background: background,
        shadows: shadows,
        fontFeatures: fontFeatures,
        decoration: decoration,
        decorationColor: decorationColor,
        decorationStyle: decorationStyle,
        decorationThickness: decorationThickness,
        debugLabel: debugLabel,
      );
}

extension SubtitleFontDefinition on FontSubtitle {
  TextStyle font(
    double? fontSize,
    Color? color, {
    bool? inherit,
    Color? backgroundColor,
    String? fontFamily,
    List<String>? fontFamilyFallback,
    FontStyle? fontStyle,
    double? letterSpacing,
    double? wordSpacing,
    TextBaseline? textBaseline,
    double? height,
    ui.TextLeadingDistribution? leadingDistribution,
    Locale? locale,
    Paint? foreground,
    Paint? background,
    List<ui.Shadow>? shadows,
    List<ui.FontFeature>? fontFeatures,
    TextDecoration? decoration,
    Color? decorationColor,
    TextDecorationStyle? decorationStyle,
    double? decorationThickness,
    String? debugLabel,
  }) =>
      TextStyle(
        inherit: inherit ?? true,
        color: color,
        backgroundColor: backgroundColor,
        fontFamily: 'Montserrat',
        fontFamilyFallback: fontFamilyFallback,
        fontSize: fontSize,
        fontWeight: FontWeight.values[this.index],
        fontStyle: FontStyle.normal,
        letterSpacing: letterSpacing,
        wordSpacing: wordSpacing,
        textBaseline: textBaseline,
        height: height,
        leadingDistribution: leadingDistribution,
        locale: locale,
        foreground: foreground,
        background: background,
        shadows: shadows,
        fontFeatures: fontFeatures,
        decoration: decoration,
        decorationColor: decorationColor,
        decorationStyle: decorationStyle,
        decorationThickness: decorationThickness,
        debugLabel: debugLabel,
      );
}

extension ContentFontDefinition on FontContent {
  TextStyle font(
    double? fontSize,
    Color? color, {
    bool? inherit,
    Color? backgroundColor,
    String? fontFamily,
    List<String>? fontFamilyFallback,
    FontStyle? fontStyle,
    double? letterSpacing,
    double? wordSpacing,
    TextBaseline? textBaseline,
    double? height,
    ui.TextLeadingDistribution? leadingDistribution,
    Locale? locale,
    Paint? foreground,
    Paint? background,
    List<ui.Shadow>? shadows,
    List<ui.FontFeature>? fontFeatures,
    TextDecoration? decoration,
    Color? decorationColor,
    TextDecorationStyle? decorationStyle,
    double? decorationThickness,
    String? debugLabel,
  }) =>
      TextStyle(
        inherit: inherit ?? true,
        color: color,
        backgroundColor: backgroundColor,
        fontFamily: 'Montserrat',
        fontFamilyFallback: fontFamilyFallback,
        fontSize: fontSize,
        fontWeight: FontWeight.values[this.index ~/ 2],
        fontStyle: this.index % 2 == 1 ? FontStyle.normal : FontStyle.italic,
        letterSpacing: letterSpacing,
        wordSpacing: wordSpacing,
        textBaseline: textBaseline,
        height: height,
        leadingDistribution: leadingDistribution,
        locale: locale,
        foreground: foreground,
        background: background,
        shadows: shadows,
        fontFeatures: fontFeatures,
        decoration: decoration,
        decorationColor: decorationColor,
        decorationStyle: decorationStyle,
        decorationThickness: decorationThickness,
        debugLabel: debugLabel,
      );
}
